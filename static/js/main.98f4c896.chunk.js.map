{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["bankOne","keyCode","keyTrigger","id","url","bankTwo","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","DrumPad","props","state","active","padStyle","playSound","bind","handleKeyPress","activatePad","document","addEventListener","this","event","power","setState","sound","getElementById","currentTime","play","setTimeout","updateDisplay","clipId","replace","onClick","className","style","src","clip","React","Component","PadBank","padBank","currentPadBank","map","padBankArr","App","display","currentPadBankId","sliderVal","displayClipName","selectBank","adjustVolume","powerControl","name","target","value","Math","round","powerSlider","float","bankSlider","clipVolume","type","min","max","step","onChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98f4c896.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst bankOne = [{\n  keyCode: 81,\n  keyTrigger: 'Q',\n  id: 'Heater-1',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n}, {\n  keyCode: 87,\n  keyTrigger: 'W',\n  id: 'Heater-2',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n}, {\n  keyCode: 69,\n  keyTrigger: 'E',\n  id: 'Heater-3',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n}, {\n  keyCode: 65,\n  keyTrigger: 'A',\n  id: 'Heater-4',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n}, {\n  keyCode: 83,\n  keyTrigger: 'S',\n  id: 'Clap',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n}, {\n  keyCode: 68,\n  keyTrigger: 'D',\n  id: 'Open-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n}, {\n  keyCode: 90,\n  keyTrigger: 'Z',\n  id: \"Kick-n'-Hat\",\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n}, {\n  keyCode: 88,\n  keyTrigger: 'X',\n  id: 'Kick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n}, {\n  keyCode: 67,\n  keyTrigger: 'C',\n  id: 'Closed-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n},\n];\n\nconst bankTwo = [{\nkeyCode: 81,\nkeyTrigger: 'Q',\nid: 'Chord-1',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n}, {\nkeyCode: 87,\nkeyTrigger: 'W',\nid: 'Chord-2',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n}, {\nkeyCode: 69,\nkeyTrigger: 'E',\nid: 'Chord-3',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n}, {\nkeyCode: 65,\nkeyTrigger: 'A',\nid: 'Shaker',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n}, {\nkeyCode: 83,\nkeyTrigger: 'S',\nid: 'Open-HH',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n}, {\nkeyCode: 68,\nkeyTrigger: 'D',\nid: 'Closed-HH',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n}, {\nkeyCode: 90,\nkeyTrigger: 'Z',\nid: 'Punchy-Kick',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n}, {\nkeyCode: 88,\nkeyTrigger: 'X',\nid: 'Side-Stick',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n}, {\nkeyCode: 67,\nkeyTrigger: 'C',\nid: 'Snare',\nurl: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n}];\n\nconst activeStyle = { //css khi button duoc bam\nbackgroundColor: 'orange',\nboxShadow: \"0 3px orange\",\nheight: 77,\nmarginTop: 13\n}\n\nconst inactiveStyle = {\nbackgroundColor: 'grey',\nmarginTop: 10,\nboxShadow: \"3px 3px 5px black\"\n}\n\nclass DrumPad extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      active:0,\n      padStyle: inactiveStyle\n    }\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.activatePad = this.activatePad.bind(this);\n  }\n  componentDidMount(){\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount(){\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress(event){\n    if(event.keyCode === this.props.keyCode){\n      this.playSound();\n    }\n  }\n\n  activatePad(){\n    if(this.props.power){\n      this.state.active === 1 ?\n        this.setState({\n          active: 0,\n          padStyle: inactiveStyle\n        }):\n        this.setState({\n          active:1,\n          padStyle: activeStyle\n        });\n    }\n    else{\n      this.state.padStyle.marginTop === 13 ?\n        this.setState({\n          padStyle: inactiveStyle\n        }):\n        this.setState({\n          padStyle: {\n            height: 77,\n            marginTop: 13,\n            backgroundColor: 'grey',\n            boxShadow: \"0 3px grey\"\n          }\n        });\n    }\n  }\n\n  playSound(){\n    const sound = document.getElementById(this.props.keyTrigger);\n    sound.currentTime = 0;\n    sound.play();\n    this.activatePad();\n    setTimeout(()=>this.activatePad(), 100);\n    this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n  }\n\n  render(){\n    return(\n      <div id={this.props.clipId} onClick={this.playSound} className=\"drum-pad\" style={this.state.padStyle}>\n        <audio className=\"clip\" id={this.props.keyTrigger} src={this.props.clip}></audio>\n        {this.props.keyTrigger}\n      </div>\n    )\n  }\n\n}\nclass PadBank extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    let padBank;\n    this.props.power ? \n      padBank = this.props.currentPadBank.map((padBankArr)=>{\n        return(\n          <DrumPad clipId={padBankArr.id} clip={padBankArr.url} keyTrigger={padBankArr.keyTrigger} keyCode={padBankArr.keyCode} updateDisplay={this.props.updateDisplay} power={this.props.power} />\n        )\n      }):\n      padBank = this.props.currentPadBank.map((padBankArr)=>{\n        return(\n          <DrumPad clipId={padBankArr.id} clip=\"#\" keyTrigger={padBankArr.keyTrigger} keyCode={padBankArr.keyCode} updateDisplay={this.props.updateDisplay} power={this.props.power} />\n        )\n      });\n    return(\n      <div className=\"pad-bank\">\n        {padBank}\n      </div>\n    )\n  }\n}\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n        power: true,\n        display: '',\n        currentPadBank: bankOne,\n        currentPadBankId: 'Heater Kit',\n        sliderVal: 0.3\n    }\n\n    this.displayClipName = this.displayClipName.bind(this);\n    this.selectBank = this.selectBank.bind(this); //chon bank\n    this.adjustVolume = this.adjustVolume.bind(this); //dieu chinh am luong\n    this.powerControl = this.powerControl.bind(this); //ham on/off drum machine\n\n  }\n  \n  powerControl(){\n    this.setState({\n      power: !this.state.power,\n      display: '' //Moi lan tat mo display deu tro thanh chuoi rong\n    })\n  }\n\n  selectBank(){\n    if(this.state.power){\n      this.state.currentPadBankId === 'Heater Kit'? this.setState({\n        currentPadBank: bankTwo,\n        display: 'Smooth Piano Kit',\n        currentPadBankId: 'Smooth Piano Kit'\n      }) : this.setState({\n        currentPadBank: bankOne,\n        display: 'Heater Kit',\n        currentPadBankId: 'Heater Kit'\n      })\n    }\n  }\n\n  displayClipName(name){\n    if(this.state.power){\n      this.setState({\n        display: name\n      })\n    }\n  }\n\n  adjustVolume(event){\n    if(this.state.power){\n      this.setState({\n        sliderVal: event.target.value,\n        display: \"Volume: \" + Math.round(event.target.value * 100)\n      });\n    }\n  }\n\n  render(){\n    const powerSlider = this.state.power ? { //Neu tru thi nut ve ben right\n      float: 'right'\n    } : {\n      float: 'left'\n    }\n\n    const bankSlider = this.state.currentPadBank === bankOne ? {\n      float: 'left'\n    }: {\n      float: 'right'\n    }\n\n    return(\n      <div id=\"drum-machine\" className=\"inner-container\">\n        <PadBank power={this.state.power} updateDisplay={this.displayClipName} clipVolume={this.state.sliderVal} currentPadBank={this.state.currentPadBank} />\n        <div className=\"controls-container\">\n          <div className=\"control\">\n            <p>Power</p>\n            <div onClick={this.powerControl} className=\"select\">\n              <div style={powerSlider} className=\"inner\" />\n            </div>\n          </div>\n          <p id=\"display\">\n            {this.state.display}\n          </p>\n          <div className=\"volume-slider\">\n            <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={this.state.sliderVal} onChange={this.adjustVolume} />\n          </div>\n          <div className=\"control\">\n            <p>Bank</p>\n            <div onClick={this.selectBank} className=\"select\">\n              <div style={bankSlider} className=\"inner\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}